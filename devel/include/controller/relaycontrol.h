// Generated by gencpp from file controller/relaycontrol.msg
// DO NOT EDIT!


#ifndef CONTROLLER_MESSAGE_RELAYCONTROL_H
#define CONTROLLER_MESSAGE_RELAYCONTROL_H

#include <ros/service_traits.h>


#include <controller/relaycontrolRequest.h>
#include <controller/relaycontrolResponse.h>


namespace controller
{

struct relaycontrol
{

typedef relaycontrolRequest Request;
typedef relaycontrolResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct relaycontrol
} // namespace controller


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::controller::relaycontrol > {
  static const char* value()
  {
    return "0b75350b18f9cacf15e795288eeb5a0e";
  }

  static const char* value(const ::controller::relaycontrol&) { return value(); }
};

template<>
struct DataType< ::controller::relaycontrol > {
  static const char* value()
  {
    return "controller/relaycontrol";
  }

  static const char* value(const ::controller::relaycontrol&) { return value(); }
};


// service_traits::MD5Sum< ::controller::relaycontrolRequest> should match
// service_traits::MD5Sum< ::controller::relaycontrol >
template<>
struct MD5Sum< ::controller::relaycontrolRequest>
{
  static const char* value()
  {
    return MD5Sum< ::controller::relaycontrol >::value();
  }
  static const char* value(const ::controller::relaycontrolRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::controller::relaycontrolRequest> should match
// service_traits::DataType< ::controller::relaycontrol >
template<>
struct DataType< ::controller::relaycontrolRequest>
{
  static const char* value()
  {
    return DataType< ::controller::relaycontrol >::value();
  }
  static const char* value(const ::controller::relaycontrolRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::controller::relaycontrolResponse> should match
// service_traits::MD5Sum< ::controller::relaycontrol >
template<>
struct MD5Sum< ::controller::relaycontrolResponse>
{
  static const char* value()
  {
    return MD5Sum< ::controller::relaycontrol >::value();
  }
  static const char* value(const ::controller::relaycontrolResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::controller::relaycontrolResponse> should match
// service_traits::DataType< ::controller::relaycontrol >
template<>
struct DataType< ::controller::relaycontrolResponse>
{
  static const char* value()
  {
    return DataType< ::controller::relaycontrol >::value();
  }
  static const char* value(const ::controller::relaycontrolResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CONTROLLER_MESSAGE_RELAYCONTROL_H
